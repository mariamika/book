{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///C:/wamp64/www/joomla/components/com_smartforms/plugin/js/conditional_manager/ConditionalManagerBootstrap.ts","webpack:///C:/wamp64/www/joomla/components/com_smartforms/plugin/js/conditional_manager/ConditionalLogicManager.ts","webpack:///C:/wamp64/www/joomla/components/com_smartforms/plugin/js/conditional_manager/steps/SfConditionalStepBase.ts","webpack:///C:/wamp64/www/joomla/components/com_smartforms/plugin/js/conditional_manager/steps/SfHandlerConditionGenerator.ts","webpack:///C:/wamp64/www/joomla/components/com_smartforms/plugin/js/conditional_manager/steps/SfHandlerFieldPicker.ts","webpack:///C:/wamp64/www/joomla/components/com_smartforms/plugin/js/conditional_manager/steps/SfNamePicker.ts","webpack:///C:/wamp64/www/joomla/components/com_smartforms/plugin/js/conditional_manager/steps/SfTextPicker.ts","webpack:///C:/wamp64/www/joomla/components/com_smartforms/plugin/js/conditional_manager/steps/SfStepPicker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","SfGetConditionalStep","formBuilder","stepConfiguration","Type","SfHandlerFieldPicker","smartFormsTranslation","SfHandlerConditionGenerator","SfNamePicker","SfTextPicker","SfStepPicker","SfConditionalLogicManager","this","FormBuilder","PanelContainer","rnJQuery","SettingsPanel","ConditionalHandlersListScreen","CurrentLeft","ConditionIdToSave","SavedConditionList","self","find","click","AddNew","Translations","GoToConditionalLogicList","ClearPanelContainer","remove","css","CreateConditionalHandlersListScreen","GoToScreen","handlers","SmartFormsGetConditionalHandlerArray","html","table","length","ShouldShow","link","CreateHandlerItem","append","buttonContainer","Previous","GoToRoot","handler","Label","HandlerSelected","id","handlerId","StartHandlerConfiguration","SmartFormsGetConditionalHandlerByType","isNew","SelectedHandler","HandlerSteps","GetConditionalSteps","IsNew","CurrentStepIndex","GoToNextStep","CurrentStep","Commit","Exit","StepConfiguration","SaveCondition","stepToMoveTo","Container","GetPanelWidth","InitializeScreen","AddStepButtons","container","nextButtonLabel","Finish","Next","GoToPreviousStep","Conditions","push","GetOptionsToSave","Id","animate","left","complete","FillSavedConditionList","width","ConditionSelected","condition","CreateConditionListItem","conditionJQuery","RedNaoEscapeHtml","smartFormsRootPath","confirm","splice","indexOf","empty","children","last","screenJQuery","Width","SfConditionalStepBase","translations","_super","_this","Options","ConditionDesigner","SFConditionDesigner","RedNaoFormElements","__extends","SetAllowJavascript","GetDesigner","IsValid","data","GetData","CompiledCondition","Disable","jQueryDocument","document","on","FormElementClicked","height","addClass","pickerInterface","options","selectedFields","AffectedItems","GetFriendlyName","Select","select2","allowClear","SelectChanged","Enable","off","removeClass","selectedValues","alert","elementClickedJQuery","fieldId","GetFormElementByContainer","inArray","change","Name","Title","val","trim","Text","$container","count","SmartFormsAddNewVar","MultipleStepsDesigner","step","checked","this_1","StepsToShow","x","icon","Icon","_i","_a","Steps","each","index"],"mappings":"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","file":"conditionalManager_bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 24);\n","function SfGetConditionalStep(formBuilder,stepConfiguration)\r\n{\r\n    if(stepConfiguration.Type==\"SfHandlerFieldPicker\")\r\n        return new SfHandlerFieldPicker(smartFormsTranslation,formBuilder,stepConfiguration);\r\n    if(stepConfiguration.Type==\"SfHandlerConditionGenerator\")\r\n        return new SfHandlerConditionGenerator(smartFormsTranslation,formBuilder,stepConfiguration);\r\n    if(stepConfiguration.Type==\"SfNamePicker\")\r\n        return new SfNamePicker(smartFormsTranslation,formBuilder,stepConfiguration);\r\n    if(stepConfiguration.Type==\"SfTextPicker\")\r\n        return new SfTextPicker(smartFormsTranslation,formBuilder,stepConfiguration);\r\n    if(stepConfiguration.Type==\"SfStepPicker\")\r\n        return new SfStepPicker(smartFormsTranslation,formBuilder,stepConfiguration);\r\n    throw 'invalid conditional step';\r\n}\r\n(window as any).SfGetConditionalStep=SfGetConditionalStep;\r\n\r\nrequire (\"./ConditionalLogicManager\");\r\nrequire(\"./steps/SfConditionalStepBase\");\r\nrequire(\"./steps/SfHandlerConditionGenerator\");\r\nrequire(\"./steps/SfHandlerFieldPicker\");\r\nrequire(\"./steps/SfNamePicker\");\r\nrequire(\"./steps/SfTextPicker\");\r\nrequire(\"./steps/SfStepPicker\");\r\n\r\n","\"use strict\";\r\n\r\nclass SfConditionalLogicManager {\r\n    private FormBuilder: any;\r\n    private PanelContainer: JQuery;\r\n    private SettingsPanel: JQuery;\r\n    private ConditionalHandlersListScreen: JQuery;\r\n    private CurrentLeft: number;\r\n    private ConditionIdToSave: number;\r\n    private SavedConditionList: JQuery;\r\n    private Translations: any;\r\n    private SelectedHandler: any;\r\n    private HandlerSteps: SfConditionalHandlerBase[];\r\n    private CurrentStepIndex: number;\r\n    private CurrentStep: any;\r\n\r\n\r\n    constructor(formBuilder: any) {\r\n        this.FormBuilder = formBuilder;\r\n        this.PanelContainer = rnJQuery('#sfPanelContainer');\r\n        this.SettingsPanel = rnJQuery('#formSettingsScrollArea');\r\n        this.ConditionalHandlersListScreen = null;\r\n        this.CurrentLeft = 0;\r\n        this.ConditionIdToSave = -1;\r\n        this.SavedConditionList = rnJQuery('#sfSavedConditionList');\r\n        let self = this;\r\n        this.SavedConditionList.find('#sfAddConditionalLogic').click(function () {\r\n            self.AddNew();\r\n        });\r\n        //noinspection JSUnresolvedVariable\r\n        this.Translations = smartFormsTranslation;\r\n    }\r\n\r\n    private AddNew() {\r\n        this.GoToConditionalLogicList();\r\n    };\r\n\r\n    private ClearPanelContainer() {\r\n        this.ConditionIdToSave = -1;\r\n        this.PanelContainer.find(\"tr:first > td:gt(0)\").remove();\r\n        this.PanelContainer.css('left', 0);\r\n        this.CurrentLeft = 0;\r\n    };\r\n\r\n\r\n    private GoToConditionalLogicList() {\r\n        this.ConditionalHandlersListScreen = this.CreateConditionalHandlersListScreen();\r\n        this.GoToScreen(this.ConditionalHandlersListScreen);\r\n    };\r\n\r\n    private CreateConditionalHandlersListScreen() {\r\n        let handlers = SmartFormsGetConditionalHandlerArray();\r\n        let html = rnJQuery(\"<div id='sfConditionalList' style='width:570px;'><table style='width: 100%'></table></div>\");\r\n        let self = this;\r\n        let table = html.find('table');\r\n        for (let i = 0; i < handlers.length; i++) {\r\n            if(handlers[i].ShouldShow(this.FormBuilder)) {\r\n                let link = this.CreateHandlerItem(handlers[i]);\r\n                table.append(link);\r\n            }\r\n        }\r\n        let buttonContainer = rnJQuery('<div style=\"width: 100%; margin-top:20px;margin-left: 5px;\"></div>');\r\n        buttonContainer.append(\"<a  style='float:left' class='smartFormsSettingsButton smartFormsPrevious'>\" + this.Translations.Previous + \"</a>\");\r\n        buttonContainer.find('.smartFormsPrevious').click(function () {\r\n            self.GoToRoot();\r\n        });\r\n        html.append(buttonContainer);\r\n        return html;\r\n    };\r\n\r\n    private CreateHandlerItem(handler) {\r\n        let link = rnJQuery(\"<tr><td style='cursor: pointer;text-align: center;'><a style='cursor: pointer;'>\" + handler.Label + \"</a></td></tr>\");\r\n        let self = this;\r\n        link.find('td').click(function () {\r\n                //noinspection JSReferencingMutableVariableFromClosure\r\n                self.HandlerSelected(handler.id)\r\n            }\r\n        );\r\n        return link;\r\n    };\r\n\r\n    private HandlerSelected(handlerId) {\r\n        this.ConditionIdToSave = -1;\r\n        this.StartHandlerConfiguration(SmartFormsGetConditionalHandlerByType(handlerId, null), true);\r\n    };\r\n\r\n    private StartHandlerConfiguration(handler, isNew) {\r\n        this.SelectedHandler = handler;\r\n        this.HandlerSteps = this.SelectedHandler.GetConditionalSteps();\r\n        if (isNew) {\r\n            for (let i = 0; i < this.HandlerSteps.length; i++)\r\n                this.HandlerSteps[i].IsNew = true;\r\n        }\r\n        this.CurrentStepIndex = -1;\r\n        this.GoToNextStep();\r\n    };\r\n\r\n\r\n    private GoToNextStep() {\r\n        if (this.CurrentStep != null) {\r\n            if (!this.CurrentStep.Commit())\r\n                return;\r\n            else\r\n                this.CurrentStep.Exit();\r\n\r\n            this.CurrentStep.StepConfiguration.IsNew = false;\r\n        }\r\n\r\n        if (this.CurrentStepIndex == this.HandlerSteps.length - 1) {\r\n            this.SaveCondition();\r\n            this.GoToRoot();\r\n            return;\r\n        }\r\n        this.CurrentStepIndex++;\r\n        let stepToMoveTo = this.HandlerSteps[this.CurrentStepIndex];\r\n        this.CurrentStep = SfGetConditionalStep(this.FormBuilder, stepToMoveTo);\r\n        stepToMoveTo.Container = rnJQuery(\"<div style='box-sizing: border-box; width:\" + this.GetPanelWidth() + \"px;'></div>\");\r\n        this.CurrentStep.InitializeScreen(stepToMoveTo.Container);\r\n        this.AddStepButtons(stepToMoveTo.Container);\r\n        this.GoToScreen(stepToMoveTo.Container);\r\n    };\r\n\r\n    private AddStepButtons(container) {\r\n        let buttonContainer = rnJQuery('<div style=\"width: 100%; margin-top:20px;\"></div>');\r\n        buttonContainer.append(\"<a  style='float:left' class='smartFormsSettingsButton smartFormsPrevious'>\" + this.Translations.Previous + \"</a>\");\r\n        let nextButtonLabel = this.CurrentStepIndex == (this.HandlerSteps.length - 1) ? this.Translations.Finish : this.Translations.Next;\r\n        buttonContainer.append(\"<a  style='float:right' class='smartFormsSettingsButton smartFormsNext'>\" + nextButtonLabel + \"</a>\");\r\n\r\n        let self = this;\r\n        buttonContainer.find('.smartFormsPrevious').click(function () {\r\n            self.GoToPreviousStep();\r\n        });\r\n        buttonContainer.find('.smartFormsNext').click(function () {\r\n            self.GoToNextStep();\r\n        });\r\n        container.append(buttonContainer);\r\n    };\r\n\r\n    private SaveCondition() {\r\n        if (this.ConditionIdToSave <= 0)\r\n            this.FormBuilder.Conditions.push(this.SelectedHandler.GetOptionsToSave());\r\n        else {\r\n            for (let i = 0; i < this.FormBuilder.Conditions.length; i++)\r\n                if (this.FormBuilder.Conditions[i].Id == this.ConditionIdToSave)\r\n                    this.FormBuilder.Conditions[i] = this.SelectedHandler.GetOptionsToSave();\r\n        }\r\n\r\n\r\n    };\r\n\r\n    private GoToRoot() {\r\n        this.CurrentStep = null;\r\n        let self = this;\r\n\r\n        this.PanelContainer.animate({'left': 0}, {\r\n            complete: function () {\r\n                self.ClearPanelContainer();\r\n                self.FillSavedConditionList();\r\n            }\r\n        });\r\n        this.SettingsPanel.animate({'width': this.GetPanelWidth()});\r\n    };\r\n\r\n    private ConditionSelected(condition) {\r\n        this.ConditionIdToSave = condition.Id;\r\n        this.StartHandlerConfiguration(SmartFormsGetConditionalHandlerByType(condition.Type, condition), false);\r\n    };\r\n\r\n    private CreateConditionListItem(condition) {\r\n        let self = this;\r\n        let conditionJQuery = rnJQuery('<tr><td class=\"SavedConditionItem\"><a style=\"cursor: pointer;\"> ' + RedNaoEscapeHtml(condition.Label) + '</a><img style=\" margin-left:5px; cursor: pointer;width:15px;height:15px;\" class=\"deleteCondition\" src=\"' + smartFormsRootPath + 'images/delete.png\" title=\"Delete\"></td></tr>');\r\n        conditionJQuery.find('a').click(function () {\r\n            self.ConditionSelected(condition)\r\n        });\r\n        conditionJQuery.find('.deleteCondition').click(function () {\r\n            if (confirm(self.Translations['AreYouSureYouWantToDelete'] + ' ' + condition.Label + '?')) {\r\n                self.FormBuilder.Conditions.splice(self.FormBuilder.Conditions.indexOf(condition), 1);\r\n                conditionJQuery.remove();\r\n            }\r\n        });\r\n        return conditionJQuery;\r\n    };\r\n\r\n    public FillSavedConditionList() {\r\n        let self = this;\r\n        this.SavedConditionList.empty();\r\n        for (let i = 0; i < this.FormBuilder.Conditions.length; i++)\r\n            this.SavedConditionList.append(this.CreateConditionListItem(this.FormBuilder.Conditions[i]));\r\n\r\n\r\n        this.SavedConditionList.append('<tr>' +\r\n            '<td class=\"SavedConditionItem\">' +\r\n            '<img id=\"cloneFormElement\" style=\"width: 20px;height: 20px;margin-right: 5px;vertical-align: middle;\" src=\"' + smartFormsRootPath + 'images/clone.png\" title=\"Clone\"><a id=\"sfAddConditionalLogic\" style=\"vertical-align: middle;cursor: pointer;\">' + this.Translations[\"AddConditionalLogic\"] + '</a>' +\r\n            '</td>' +\r\n            '</tr>');\r\n\r\n        this.SavedConditionList.find('#cloneFormElement,#sfAddConditionalLogic').click(function () {\r\n            self.AddNew();\r\n        });\r\n    };\r\n\r\n    private GoToPreviousStep() {\r\n        if (this.CurrentStep != null)\r\n            this.CurrentStep.Exit();\r\n        this.CurrentStepIndex--;\r\n        if (this.CurrentStepIndex == -1)\r\n            this.CurrentStep = null;\r\n        else {\r\n            let stepToMoveTo = this.HandlerSteps[this.CurrentStepIndex];\r\n            stepToMoveTo.Container.empty();\r\n            this.CurrentStep = SfGetConditionalStep(this.FormBuilder, stepToMoveTo);\r\n            this.CurrentStep.InitializeScreen(stepToMoveTo.Container);\r\n            this.AddStepButtons(stepToMoveTo.Container);\r\n        }\r\n\r\n        this.CurrentLeft += this.GetPanelWidth();\r\n        let self = this;\r\n        this.PanelContainer.animate({'left': this.CurrentLeft}, {\r\n            complete: function () {\r\n                self.PanelContainer.find('tr:first').children().last().remove();\r\n            }\r\n        });\r\n        this.SettingsPanel.animate({'width': this.GetPanelWidth()});\r\n    };\r\n\r\n    private GoToScreen(screenJQuery) {\r\n        let container = rnJQuery('<td style=\"vertical-align: top\"></td>');\r\n        container.append(screenJQuery);\r\n        this.PanelContainer.find('tr:first').append(container);\r\n\r\n        this.CurrentLeft -= this.SettingsPanel.width();\r\n        this.PanelContainer.animate({'left': this.CurrentLeft});\r\n        this.SettingsPanel.animate({'width': this.GetPanelWidth()});\r\n\r\n\r\n    };\r\n\r\n    private GetPanelWidth() {\r\n        if (this.CurrentStep == null)\r\n            return 570;\r\n        else\r\n            return this.CurrentStep.Width;\r\n    };\r\n}\r\n\r\n(window as any).SfConditionalLogicManager=SfConditionalLogicManager;\r\n\r\n","abstract class SfConditionalStepBase <T extends SfConditionalStepOptions>{\r\n    protected FormBuilder: any;\r\n    protected Translations: any;\r\n    protected StepConfiguration: StepConfiguration<T>;\r\n    protected Width: number;\r\n\r\n    constructor(translations, formBuilder, stepConfiguration) {\r\n        this.FormBuilder = formBuilder;\r\n        this.Translations = translations;\r\n        this.StepConfiguration = stepConfiguration;\r\n        this.Width = 570;\r\n    }\r\n\r\n\r\n    public abstract InitializeScreen(container);\r\n\r\n\r\n    public abstract Exit();\r\n\r\n\r\n    public abstract Commit();\r\n}\r\n(window as any).SfConditionalStepBase=SfConditionalStepBase;\r\n\r\ninterface StepConfiguration<T extends SfConditionalStepOptions>{\r\n    IsNew:boolean;\r\n    Label:string;\r\n    Id:number;\r\n    Options:T;\r\n}\r\n\r\ninterface SfConditionalStepOptions{\r\n\r\n}","class SfHandlerConditionGenerator extends SfConditionalStepBase<any> {\r\n    private ConditionDesigner: SFConditionDesigner;\r\n\r\n    constructor(translations, formBuilder, stepConfiguration) {\r\n        super(translations, formBuilder, stepConfiguration);\r\n\r\n        this.StepConfiguration.Options.IsNew = this.StepConfiguration.IsNew;\r\n        this.ConditionDesigner = new SFConditionDesigner(this.FormBuilder.RedNaoFormElements, this.StepConfiguration.Options);\r\n        this.Width = 570;\r\n    }\r\n\r\n\r\n    public InitializeScreen(container) {\r\n        container.css('padding-left', '5px');\r\n        container.css('padding-right', '5px');\r\n\r\n        container.append('<h2 style=\"text-align: left\">' + this.Translations[this.StepConfiguration.Label] + '</h2>');\r\n        this.ConditionDesigner.SetAllowJavascript();\r\n        container.append(this.ConditionDesigner.GetDesigner());\r\n    };\r\n\r\n\r\n    public Exit() {\r\n\r\n    };\r\n\r\n    public Commit() {\r\n        if (this.ConditionDesigner.IsValid()) {\r\n            let data = this.ConditionDesigner.GetData();\r\n            this.StepConfiguration.Options.Conditions = data.Conditions;\r\n            this.StepConfiguration.Options.CompiledCondition = data.CompiledCondition;\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n}\r\n\r\n(window as any).SfHandlerConditionGenerator=SfHandlerConditionGenerator;","class SfHandlerFieldPicker extends SfConditionalStepBase<any> {\r\n    private Select:JQuery;\r\n    constructor(translations, formBuilder, stepConfiguration) {\r\n        super(translations, formBuilder, stepConfiguration);\r\n    }\r\n\r\n\r\n    public InitializeScreen(container) {\r\n        this.FormBuilder.Disable();\r\n        container.css('text-align', 'left');\r\n        container.css('padding-left', '5px');\r\n        container.css('padding-right', '5px');\r\n        let jQueryDocument = rnJQuery(document);\r\n        let self = this;\r\n        rnJQuery('#redNaoElementlist').on(\"click.FieldPicker\", '.rednao-control-group', function () {\r\n            self.FormElementClicked(rnJQuery(this));\r\n        });\r\n        rnJQuery('#sfMainContainer').append('<div class=\"smartFormsSlider smartFormsFieldPickerOverlay\"><div class=\"ui-widget-overlay\" style=\"z-index: 1001;width:' + jQueryDocument.width() + 'px;height:' + jQueryDocument.height() + '\" ></div></div>');\r\n        rnJQuery('.rednaoformbuilder').addClass('smartFormsFieldPick');\r\n        let pickerInterface = rnJQuery('<div class=\"fieldPickContainer\" style=\"margin:10px;\"></div>');\r\n\r\n        let options = \"\";\r\n        let selectedFields = [];\r\n        if (!this.StepConfiguration.IsNew)\r\n            selectedFields = this.StepConfiguration.Options.AffectedItems;\r\n\r\n\r\n        for (let i = 0; i < this.FormBuilder.RedNaoFormElements.length; i++) {\r\n            options += '<option ' + (selectedFields.indexOf(this.FormBuilder.RedNaoFormElements[i].Options.Id) >= 0 ? 'selected=\"selected\"' : '') + '  value=\"' + this.FormBuilder.RedNaoFormElements[i].Options.Id + '\">' + this.FormBuilder.RedNaoFormElements[i].GetFriendlyName() + '</option>';\r\n        }\r\n        this.Select = rnJQuery('<select size=\"margin-left:10px;\" multiple=\"multiple\" id=\"redNaoFieldPicked\" style=\"width:100%\">' + options + '</select>');\r\n        pickerInterface.append(this.Select);\r\n        this.Select.select2({\r\n            allowClear: true\r\n        }).on(\"change\", function () {\r\n            self.SelectChanged();\r\n        });\r\n        container.append('<h2 style=\"text-align: left\">' + this.Translations[this.StepConfiguration.Label] + '</h2>');\r\n        container.append(pickerInterface);\r\n\r\n\r\n    };\r\n\r\n    public Exit() {\r\n        this.FormBuilder.Enable();\r\n        rnJQuery('#redNaoElementlist').off(\"click.FieldPicker\");\r\n        rnJQuery('.fieldPickerSelected').removeClass('fieldPickerSelected');\r\n        rnJQuery('.rednaoformbuilder').removeClass('smartFormsFieldPick');\r\n        rnJQuery('.smartFormsFieldPickerOverlay').remove();\r\n    };\r\n\r\n    public Commit() {\r\n        let selectedValues = this.Select.select2('val');\r\n        if (selectedValues.length == 0) {\r\n            alert(this.Translations[\"SelectAtLeastOneField\"]);\r\n            return false;\r\n        }\r\n        this.StepConfiguration.Options.AffectedItems = selectedValues;\r\n        return true;\r\n    };\r\n\r\n    public FormElementClicked(elementClickedJQuery) {\r\n        let fieldId = this.FormBuilder.GetFormElementByContainer(elementClickedJQuery).Id;\r\n        let selectedFields = this.Select.select2('val');\r\n        if (rnJQuery.inArray(fieldId, selectedFields) >= 0)\r\n            return;\r\n        selectedFields.push(fieldId);\r\n        this.Select.select2('val', selectedFields).change();\r\n    };\r\n\r\n    public SelectChanged() {\r\n        let selectedFields = this.Select.select2('val');\r\n        rnJQuery('.fieldPickerSelected').removeClass('fieldPickerSelected');\r\n        for (let i = 0; i < selectedFields.length; i++) {\r\n            rnJQuery('#' + selectedFields[i]).addClass('fieldPickerSelected');\r\n        }\r\n    };\r\n\r\n}\r\n\r\n(window as any).SfHandlerFieldPicker=SfHandlerFieldPicker;","class SfNamePicker extends SfConditionalStepBase<any> {\r\n    protected Title:JQuery;\r\n    constructor(translations, formBuilder, stepConfiguration) {\r\n        super(translations, formBuilder, stepConfiguration);\r\n    }\r\n\r\n\r\n    public InitializeScreen(container) {\r\n        container.css('text-align', 'left');\r\n        container.css('padding-left', '5px');\r\n        container.css('padding-right', '5px');\r\n\r\n        container.append('<h2 style=\"text-align: left\">' + this.Translations[this.StepConfiguration.Label] + '</h2>');\r\n\r\n        let name = this.Translations[\"MyNewCondition\"] + \" \" + this.StepConfiguration.Id;\r\n        if (!this.StepConfiguration.IsNew) {\r\n            name = this.StepConfiguration.Options.Name;\r\n        }\r\n        this.Title = rnJQuery('<input type=\"text\" style=\"width: 100%;height: 40px;font-size: 20px;padding: 10px;\">');\r\n        this.Title.val(name);\r\n        container.append(this.Title);\r\n\r\n    };\r\n\r\n    public  Exit() {\r\n\r\n    };\r\n\r\n    public Commit() {\r\n        if (this.Title.val().trim() == \"\") {\r\n            alert(this.Translations[\"TheTitleCantBeEmpty\"]);\r\n            return false;\r\n        }\r\n\r\n        this.StepConfiguration.Options.Name = this.Title.val();\r\n        return true;\r\n    };\r\n}\r\n\r\n(window as any).SfNamePicker=SfNamePicker;","class SfTextPicker extends SfConditionalStepBase<any> {\r\n    protected Title:JQuery;\r\n    constructor(translations, formBuilder, stepConfiguration) {\r\n        super(translations, formBuilder, stepConfiguration);\r\n\r\n    }\r\n\r\n\r\n    public InitializeScreen(container) {\r\n        container.css('text-align', 'left');\r\n        container.css('padding-left', '5px');\r\n        container.css('padding-right', '5px');\r\n\r\n        container.append('<h2 style=\"text-align: left\">' + this.Translations[this.StepConfiguration.Label] + '</h2>');\r\n\r\n        let name = 'Invalid value';\r\n        if(typeof this.StepConfiguration.Options!='undefined'&& typeof this.StepConfiguration.Options.Text!=\"undefined\")\r\n            name=this.StepConfiguration.Options.Text;\r\n        this.Title = rnJQuery('<input type=\"text\" style=\"width: 100%;height: 40px;font-size: 20px;padding: 10px;\">');\r\n        this.Title.val(name);\r\n        container.append(this.Title);\r\n\r\n    };\r\n\r\n    public Exit() {\r\n\r\n    };\r\n\r\n    public Commit() {\r\n\r\n        this.StepConfiguration.Options.Text = this.Title.val();\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\n(window as any).SfTextPicker=SfTextPicker;","class SfStepPicker extends SfConditionalStepBase<SfStepPickerOptions> {\r\n    private $container:JQuery;\r\n    constructor(translations, formBuilder, stepConfiguration) {\r\n        super(translations, formBuilder, stepConfiguration);\r\n\r\n    }\r\n\r\n\r\n\r\n    public InitializeScreen(container) {\r\n        this.$container=container;\r\n\r\n        container.css('text-align', 'left');\r\n        container.css('padding-left', '5px');\r\n        container.css('padding-right', '5px');\r\n\r\n\r\n        container.append('<h2 style=\"text-align: left\">' + this.Translations[this.StepConfiguration.Label] + '</h2>');\r\n\r\n        let count=0;\r\n        if( SmartFormsAddNewVar.FormBuilder.MultipleStepsDesigner!=null)\r\n            for(let step of SmartFormsAddNewVar.FormBuilder.MultipleStepsDesigner.Options.Steps)\r\n            {\r\n                let checked='';\r\n                if(!this.StepConfiguration.IsNew)\r\n                {\r\n                    if(this.StepConfiguration.Options.StepsToShow.find(x=>x==step.Id)!=null)\r\n                        checked='checked=\"checked\"';\r\n                }\r\n                count++;\r\n                let icon;\r\n                if(step.Icon=='def')\r\n                    icon='<span style=\"margin-left: 3px\" class=\"badge badge-info\">' + count + '</span> ';\r\n                else\r\n                    icon='<span class=\"' + step.Icon + '\"></span> ';\r\n                container.append(\r\n                    `<div class=\"row\" style=\"padding-left:20px;display: flex;vertical-align: middle;align-items: center;\">\r\n                            <input ${checked} class=\"stepItem\" type=\"checkbox\" value=\"${step.Id}\" style=\"margin:0\"/>\r\n                            ${icon}<span style=\"margin-left: 3px;font-size: 15px;\" >${step.Text}</span>\r\n                         </div>`\r\n                );\r\n            }\r\n\r\n\r\n        let name = 'Invalid value';\r\n    };\r\n\r\n    public Exit() {\r\n\r\n    };\r\n\r\n    public Commit() {\r\n        this.StepConfiguration.Options.StepsToShow=[];\r\n        this.$container.find('.stepItem:checked').each((index,value)=>{\r\n            this.StepConfiguration.Options.StepsToShow.push(rnJQuery(value).val());\r\n        });\r\n        if(this.StepConfiguration.Options.StepsToShow.length==0)\r\n        {\r\n            alert('Please select at least one step');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\n\r\n(window as any).SfStepPicker=SfStepPicker;\r\n\r\ninterface SfStepPickerOptions extends SfConditionalStepOptions{\r\n    StepsToShow:any[];\r\n}"],"sourceRoot":""}